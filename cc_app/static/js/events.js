document.addEventListener('DOMContentLoaded', () => {
    const themeToggleButton = document.getElementById('theme-toggle');
    const body = document.body;
    let isDarkTheme = true;

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    themeToggleButton.addEventListener('click', () => {
        isDarkTheme = !isDarkTheme;

        if (isDarkTheme) {
            body.classList.remove('light-theme');
            themeToggleButton.textContent = 'üåô'; // –õ—É–Ω–∞ –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        } else {
            body.classList.add('light-theme');
            themeToggleButton.textContent = '‚òÄÔ∏è'; // –°–æ–ª–Ω—Ü–µ –¥–ª—è —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
        }
    });

    // –ö–∞–ª–µ–Ω–¥–∞—Ä—å
    const calendarContainer = document.getElementById('calendar');
    const currentDate = new Date();
    const monthNames = ["–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"];

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
    async function fetchEvents() {
        try {
            const response = await fetch('/api/events/');
            if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π');
            return await response.json();
        } catch (error) {
            console.error(error);
            return [];
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    async function generateCalendar(month, year) {
        const events = await fetchEvents(); // –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        const firstDayOfMonth = new Date(year, month).getDay();
        const daysInMonth = new Date(year, month + 1, 0).getDate();

        let calendarHTML = `<h3>${monthNames[month]} ${year}</h3><table><tr>`;
        for (let i = 0; i < 7; i++) {
            calendarHTML += `<th>${['–ü', '–í', '–°', '–ß', '–ü', '–°', '–í'][i]}</th>`;
        }
        calendarHTML += `</tr><tr>`;

        // –ü—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
        for (let i = 0; i < firstDayOfMonth; i++) {
            calendarHTML += `<td></td>`;
        }

        // –î–Ω–∏ –º–µ—Å—è—Ü–∞
        for (let day = 1; day <= daysInMonth; day++) {
            if ((firstDayOfMonth + day - 1) % 7 === 0 && day !== 1) {
                calendarHTML += `</tr><tr>`;
            }

            const dateString = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
            const dayEvents = events.filter(event => event.date === dateString);

            if (dayEvents.length > 0) {
                calendarHTML += `<td class="event-day" data-date="${dateString}">
                                    ${day}
                                    <span class="event-count">${dayEvents.length}</span>
                                </td>`;
            } else {
                calendarHTML += `<td>${day}</td>`;
            }
        }

        calendarHTML += `</tr></table>`;
        calendarContainer.innerHTML = calendarHTML;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –¥–Ω–∏ —Å —Å–æ–±—ã—Ç–∏—è–º–∏
        document.querySelectorAll('.event-day').forEach(cell => {
            cell.addEventListener('click', () => {
                const date = cell.getAttribute('data-date');
                const dayEvents = events.filter(event => event.date === date);
                showEventDetails(dayEvents);
            });
        });
    }

    // –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    function showEventDetails(events) {
        const event = events[0]; // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        if (confirm(`–î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ "${event.title}" –≤ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å?`)) {
            addToLocalCalendar(event);
        }
    }

    function addToLocalCalendar(event) {
        const start = `${event.date}T${event.time}`;
        const end = new Date(new Date(start).getTime() + 2 * 60 * 60 * 1000).toISOString();

        const calendarEvent = {
            title: event.title,
            start,
            end,
            description: event.description,
            location: event.location
        };

        try {
            const url = `https://calendar.google.com/calendar/r/eventedit?text=${encodeURIComponent(calendarEvent.title)}&dates=${start}/${end}&details=${encodeURIComponent(calendarEvent.description)}&location=${encodeURIComponent(calendarEvent.location)}`;
            window.open(url, '_blank');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.');
        }
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    generateCalendar(currentDate.getMonth(), currentDate.getFullYear());
});
